name: Release Extension

on:
  push:
    tags:
      - "v*" # Triggers on version tags like v1.0.0

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required for creating releases

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: 🏗 Setup node env
        uses: actions/setup-node@v4
        with:
          node-version-file: ".node-version"
          check-latest: true
          cache: "npm"
          cache-dependency-path: package-lock.json

      - name: 👨🏻‍💻 Install dependencies
        run: npm ci

      - name: Build extension
        run: npm run build

      - name: Set version from tag
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Create extension package
        run: |
          mkdir -p packages
          cd dist
          zip -r ../packages/eternal-history-v${{ env.VERSION }}.zip .

      - name: Calculate file checksums
        run: |
          cd packages
          sha256sum eternal-history-v${{ env.VERSION }}.zip > eternal-history-v${{ env.VERSION }}.sha256

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: Eternal History v${{ env.VERSION }}
          draft: false
          prerelease: false
          body: |
            ## Eternal History v${{ env.VERSION }}

      - name: Upload ZIP Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./packages/eternal-history-v${{ env.VERSION }}.zip
          asset_name: eternal-history-v${{ env.VERSION }}.zip
          asset_content_type: application/zip

      - name: Upload Checksum Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./packages/eternal-history-v${{ env.VERSION }}.sha256
          asset_name: eternal-history-v${{ env.VERSION }}.sha256
          asset_content_type: text/plain
